
name: Build and Deploy to Sandbox

on:
  push:
    branches: 
      - develop
      - release
  pull_request:
    branches:
      - develop
      - release   
    
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8
    
    - name: Build with Maven
      env:
        nexus_username: ${{ secrets.NEXUSUSERNAME }}
        nexus_password: ${{ secrets.NEXUSPASSWORD }}
        connected_app_clientid: ${{ secrets.connected_app_clientid }}
        connected_app_clientsecret: ${{ secrets.connected_app_clientsecret }}
        KEY: ${{ secrets.decryption_key }}
      run: mvn -B package -s .maven/settings.xml -DskipMunitTests
    
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(basename "$artifactName1" .jar)-$commitHash.jar
        mv "$artifactName1" "$artifactName2"
    
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: target/*.jar

  upload:
    if: github.ref == 'refs/heads/develop'
    needs: build
    runs-on: ubuntu-latest
    env:
      client_id: ${{ secrets.ANYPOINTCLIENT_ID }}
      client_secret: ${{ secrets.ANYPOINTCLIENT_SECRET }}
      connected_app_clientid: ${{ secrets.connected_app_clientid }}
      connected_app_clientsecret: ${{ secrets.connected_app_clientsecret }}
    
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v3
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: artifacts
    
    - name: Upload to Exchange
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn deploy -s .maven/settings.xml -Dmule.artifact="$artifactName" -Dclient.id=$client_id -Dclient.secret=$client_secret

  deploy:
    if: github.ref == 'refs/heads/develop'
    needs: upload
    runs-on: ubuntu-latest
    env:
      client_id: ${{ secrets.ANYPOINTCLIENT_ID }}
      client_secret: ${{ secrets.ANYPOINTCLIENT_SECRET }}
      connected_app_clientid: ${{ secrets.connected_app_clientid }}
      connected_app_clientsecret: ${{ secrets.connected_app_clientsecret }}
    
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v3
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: artifacts
    
    - name: Find Jar File
      id: find-jar
      run: |
        artifactName=$(ls *.jar | head -1)
        echo "artifact_name=$artifactName" >> $GITHUB_ENV
    
    - name: Read pom.xml
      id: read-pom
      run: |
        appName=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)
        echo "appName=$appName" >> $GITHUB_ENV
    
    - name: Deploy to Dev
      env:
        client_id: ${{ secrets.ANYPOINTCLIENT_ID }}
        client_secret: ${{ secrets.ANYPOINTCLIENT_SECRET }}
        KEY: ${{ secrets.decryption_key }}
        nexus_username: ${{ secrets.NEXUSUSERNAME }}
        nexus_password: ${{ secrets.NEXUSPASSWORD }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn mule:deploy -s .maven/settings.xml -DskipMunitTests -DappName="$appName-v1-dev" \
        -Dmule.env=dev -Danypoint.client_secret=$client_secret -Ddecryption.key=$KEY \
        -DworkerSize=0.1 -Dreplica=1 -DmuleVersion=4.7.1 -Ddefault.public.url=false \
        -DpublicUrl.host=mw-mule-dev -Denvironment=DEV -Dmule.artifact=$artifactName \
        -Danypoint.client_id=$client_id -DtargetName=non-prod-ps

  release-qa:
    if: github.ref == 'refs/heads/release'
    needs: build
    runs-on: ubuntu-latest
    env:
      client_id: ${{ secrets.ANYPOINTCLIENT_ID }}
      client_secret: ${{ secrets.ANYPOINTCLIENT_SECRET }}
      connected_app_clientid: ${{ secrets.connected_app_clientid }}
      connected_app_clientsecret: ${{ secrets.connected_app_clientsecret }}
    
    steps:    
    - name: Checkout this repo
      uses: actions/checkout@v3
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: artifacts
    
    - name: Find Jar File
      id: find-jar
      run: |
        artifactName=$(ls *.jar | head -1)
        echo "artifact_name=$artifactName" >> $GITHUB_ENV
    
    - name: Read pom.xml
      id: read-pom
      run: |
        appName=$(mvn help:evaluate -Dexpression=project.name -q -DforceStdout)
        echo "appName=$appName" >> $GITHUB_ENV
    
    - name: Deploy to QA
      env:
        client_id: ${{ secrets.ANYPOINTCLIENT_ID }}
        client_secret: ${{ secrets.ANYPOINTCLIENT_SECRET }}
        KEY: ${{ secrets.decryption_key }}
        nexus_username: ${{ secrets.NEXUSUSERNAME }}
        nexus_password: ${{ secrets.NEXUSPASSWORD }}
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn mule:deploy -s .maven/settings.xml -DskipMunitTests -DappName="$appName-v1-qa" \
        -Dmule.env=qa -Danypoint.client_secret=$client_secret -Ddecryption.key=$KEY \
        -DworkerSize=0.1 -Dreplica=1 -DmuleVersion=4.7.1 -Ddefault.public.url=false \
        -DpublicUrl.host=mw-mule-test -Denvironment=TEST -Dmule.artifact=$artifactName \
        -Danypoint.client_id=$client_id -DtargetName=non-prod-ps
